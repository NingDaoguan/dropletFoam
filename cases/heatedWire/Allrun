#!/usr/bin/python

import os
import sys

sys.path.append('../../../foamTools/python')
import pyOpenFOAM

# Read number of processors from command line (1 by default)
(np,resume) = pyOpenFOAM.read_inputs(sys.argv)

if not resume:
    print "Running with %d processors" % np

    # Make the *.foam file for ParaView
    pyOpenFOAM.touch_foam_files('wire')

    os.system('cp -r 0.org 0')

    print "Generating blockMesh"
    pyOpenFOAM.run('blockMesh')

    if np > 1:
        # For parallel runs, decompose the problem
        print "Decomposing problem"
        pyOpenFOAM.set_decompose_par(np,"simple",1) #aspect ratio = 1 H/W
        pyOpenFOAM.set_balance_par(np)
        pyOpenFOAM.run('decomposePar',args='-cellDist')

    n_adapts = pyOpenFOAM.max_refinement_levels()
        
    for i in range(0,n_adapts):
        print "Pre-Refinement loop", i
        pyOpenFOAM.run('VOFSetFields',np)
        pyOpenFOAM.run('initDynamicMesh',np)


    print "Setting final field values"
    pyOpenFOAM.run('VOFSetFields',np)

else:
    print "Resuming with %d processors" % np
    

# Run the problem
print "Running the problem"
pyOpenFOAM.run('reactingInterFoam',np,hide=False)


print "Finished!"

