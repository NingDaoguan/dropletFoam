/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2.1.0                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 0.01; //values here are in cm

vertices
(
    (0 -10 0)
    (6 -10 0)
    (2.646 -7.354 0)
    (3.354 -7.354 0)
    (2.646 -6.646 0)
    (3.354 -6.646 0)
    (0 -4 0)
    (6 -4 0)
    (0 0 0)
    (6 0 0)
    (0 -10 1)
    (6 -10 1)
    (2.646 -7.354 1)
    (3.354 -7.354 1)
    (2.646 -6.646 1)
    (3.354 -6.646 1)
    (0 -4 1)
    (6 -4 1)
    (0 0 1)
    (6 0 1)
);

blocks
(
    hex (0 1 3 2 10 11 13 12) (60 50 5) simpleGrading (1 0.2 1)
    hex (1 7 5 3 11 17 15 13) (60 50 5) simpleGrading (1 0.2 1)
    hex (5 7 6 4 15 17 16 14) (50 60 5) simpleGrading (5 1 1)
    hex (0 2 4 6 10 12 14 16) (50 60 5) simpleGrading (0.2 1 1)
    hex (6 7 9 8 16 17 19 18) (60 40 5) simpleGrading (1 1 1)
);

edges
(
    arc 2 4 (2.5 -7   0)
    arc 4 5 (3   -6.5 0)
    arc 5 3 (3.5 -7   0)
    arc 3 2 (3   -7.5 0)
    arc 12 14 (2.5 -7   1)
    arc 14 15 (3   -6.5 1)
    arc 15 13 (3.5 -7   1)
    arc 13 12 (3   -7.5 1)
);

boundary
(
    Bottom
    {
        type patch;
        faces
        (
            (0 1 11 10)
        );
    }
    
    Sides
    {
        type patch;
        faces
        (
            (1 7 17 11)
            (7 9 19 17)
            (8 6 16 18)
            (6 0 10 16)
        );
    }
    
    
    Top
    {
        type patch;
        faces
        (
            (9 8 18 19)
        );
    }
    
    Wire
    {
        type patch;
        faces
        (
            (3 2 12 13)
            (5 3 13 15)
            (4 5 15 14)
            (2 4 14 12)
        );
    }
    
    FrontAndBack
    {
        type symmetryPlane;
        faces
        (
            (3 1 0 2)
            (5 7 1 3)
            (6 7 5 4)
            (6 4 2 0)
            (6 8 9 7)
            (10 11 13 12)
            (11 17 15 13)
            (15 17 16 14)
            (10 12 14 16)
            (16 17 19 18)
        );
    }
);

mergePatchPairs
(
);

// ************************************************************************* //
